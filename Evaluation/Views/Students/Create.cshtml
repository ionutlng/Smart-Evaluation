@*@model Evaluation.Models.Student

@{
    ViewData["Title"] = "Registration";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class=" alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-xl-9 mx-auto">
                    <div class="card card-signin flex-row my-5">
                        <div class="card-img-left d-none d-md-flex">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title text-center">Register</h5>
                            <form class="form-signin">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-label-group">
                                    <div class="col-md-auto">
                                        @Html.EditorFor(model => model.studUsername, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.studUsername, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <hr />
                                <div class="form-label-group">
                                    <div class="col-md-auto">
                                        @Html.EditorFor(model => model.studPassword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.studPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-label-group">
                                    <div class="col-md-auto">
                                        @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="form-group">
                                    <select asp-for="group" asp-items="Html.GetEnumSelectList<Group>()"></select>
                                </div>*@
                                @* @Html.ActionLink("Register", "Create", "StudentsController", null, new { @class = "btn btn-lg btn-primary btn-block text-uppercase" })

                                <button class="btn btn-lg btn-primary btn-block text-uppercase">
                                    <input type="submit" value="Create">
                                </button>

                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
}

@section Styles{
    <link href="@Url.Content("~/css/login.css")" rel="stylesheet" type="text/css" />
}
*@